<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        ">

	<beans:bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:import resource="classpath:service-providers.xml" />

	<context:component-scan base-package="com.zx" />

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- fastjosn spring support -->
			<beans:bean id="jsonConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<beans:property name="supportedMediaTypes" value="application/json" />
				<beans:property name="features">
					<beans:list>
						<beans:value>DisableCircularReferenceDetect</beans:value>
					</beans:list>
				</beans:property>
			</beans:bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<annotation-driven>  
	    <argument-resolvers>  
	        <beans:bean  
	            class="org.springframework.mobile.device.DeviceWebArgumentResolver" />  
	        <beans:bean  
	            class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />  
	    </argument-resolvers>  
    </annotation-driven>  
    
    <interceptors>  
	    <!-- On pre-handle, resolve the device that originated the web request -->  
	    <beans:bean  
	        class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />  
	    <!-- On pre-handle, manage the user's site preference (declare after DeviceResolverHandlerInterceptor) -->  
	    <beans:bean  
	        class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />  
    </interceptors>  
	
	

	<aop:aspectj-autoproxy />

	<resources mapping="/resources/**" location="/resources/" /><!-- 
		指定静态的资源 -->


	<!-- 标号id1 -->
	<beans:bean id="templateResolver"
		class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<beans:property name="prefix" value="/WEB-INF/templates/" />
		<beans:property name="suffix" value=".html" />
		<beans:property name="templateMode" value="HTML5" />
		<!-- Template cache is set to false (default is true). -->
		<beans:property name="cacheable" value="false" />
		<beans:property name="characterEncoding" value="UTF-8" />
	</beans:bean>
	

	<beans:bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<beans:property name="templateResolver" ref="templateResolver" /> <!-- 引用上面的id1 -->
	</beans:bean>

	<beans:bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<beans:property name="templateEngine" ref="templateEngine" />
		<beans:property name="characterEncoding" value="UTF-8" />
	</beans:bean>

	<!-- Simple strategy: only path extension is taken into account -->
	<beans:bean id="cnManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="true" />
		<beans:property name="ignoreAcceptHeader" value="true" />
		<beans:property name="defaultContentType" value="text/html" />

		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="html" value="text/html" />
				<beans:entry key="xml" value="application/xml" />
				<beans:entry key="atom" value="application/atom+xml" />
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- setting for update multiple files -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>

</beans:beans>
